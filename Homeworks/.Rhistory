chile.glm <- glm(vote ~ age + statusquo,data=ChileYN,family = binomial(link = "logit"))
summary(chile.glm)
#Chi-Square analysis on logistic regression
anova(chile.glm, test="Chisq")
# Convert the log odds for the coefficient on the predictor into regular odds
exp(coef(chile.glm))
bayesLogitOut <- MCMClogit(formula = vote ~ age + statusquo, data = ChileYN)
summary(bayesLogitOut) # Summarize the results
plot(bayesLogitOut)
quoLogOdds <- as.matrix(MCMClogit[,"statusquo"])
quoLogOdds <- as.matrix(MCMClogit[,"statusquo"])
bayesLogitOut
quoLogOdds <- as.matrix(bayesLogitOut[,"statusquo"])
quoLogOdds <- exp(quoLogOdds)
hist(quoLogOdds, main=NULL)
# bayesLogitOut
quoLogOdds <- as.matrix(bayesLogitOut[,"statusquo"])
quoLogOdds <- exp(quoLogOdds)
hist(quoLogOdds, main=NULL)
abline(v=quantile(quoLogOdds,c(0.025)),col="orange")
abline(v=quantile(quoLogOdds,c(0.975)),col="blue")
abline(v=quantile(quoLogOdds,c(0.50)),col="green")
EnsurePackage("MASS") # AIC
stepOut <- stepAIC(chile.glm)
stepOut$anova
stepOut <- stepAIC(chile.glm)
EnsurePackage("MASS") # AIC
stepOut <- stepAIC(chile.glm)
stepOut$anova
# bayesLogitOut
quoLogOdds <- as.matrix(bayesLogitOut[,"statusquo"])
quoLogOdds <- exp(quoLogOdds)
hist(quoLogOdds, main=NULL)
abline(v=quantile(quoLogOdds,c(0.025)),col="orange")
abline(v=quantile(quoLogOdds,c(0.975)),col="blue")
abline(v=quantile(quoLogOdds,c(0.50)),col="green")
options(scipen=999)  # turn-off scientific notation like 1e+48
swiss.glm <- glm(Catholic.b ~ Fertility + Agriculture,data=swiss,family = binomial(link = "logit"))
summary(swiss.glm)
#Chi-Square analysis on logistic regression
anova(swiss.glm, test="Chisq")
# Convert the log odds for the coefficient on the predictor into regular odds
exp(coef(glmOut))
summary(swiss.glm)
options(scipen=999)  # turn-off scientific notation like 1e+48
swiss.glm <- glm(Catholic.b ~ Fertility + Agriculture,data=swiss,family = binomial(link = "logit"))
summary(swiss.glm)
#Chi-Square analysis on logistic regression
anova(swiss.glm, test="Chisq")
# Convert the log odds for the coefficient on the predictor into regular odds
exp(coef(glmOut))
# load the necessary library for further processing...
EnsurePackage("tidyverse")
swiss %>%
pivot_longer(cols= -Catholic, names_to="variable", values_to="value", values_drop_na = TRUE) %>%
ggplot(aes(x=variable, y=value)) + geom_violin() + facet_wrap( ~ variable, scales="free")
swiss$Catholic.b <- as.integer(swiss$Catholic > 60) # 60 looks like a gap in the histogram
table(swiss$Catholic.b)
plot(swiss.glm)
hist(residuals(swiss.glm))
# Convert the log odds for the coefficient on the predictor into regular odds
exp(coef(glmOut))
summary(swiss.glm)
#Chi-Square analysis on logistic regression
anova(swiss.glm, test="Chisq")
60.284-24.032
anova(swiss.glm, test="Chisq")
60.284-24.032
60.284 - 36.252
PseudoR2(swiss.glm) # generate pseudo‐R‐squared values
#Chi-Square analysis on logistic regression
ChisqOut <- anova(swiss.glm, test="Chisq")
table(round(predict(ChisqOut,type="response")),Catholic.b)
#Chi-Square analysis on logistic regression
anova(swiss.glm, test="Chisq")
# Convert the log odds for the coefficient on the predictor into regular odds
exp(coef(swiss.glm))
options(scipen=999)  # turn-off scientific notation like 1e+48
swiss.glm <- glm(Catholic.b ~ Fertility + Agriculture,data=swiss,family = binomial(link = "logit"))
summary(swiss.glm)
#Chi-Square analysis on logistic regression
anova(swiss.glm, test="Chisq")
# Convert the log odds for the coefficient on the predictor into regular odds
exp(coef(swiss.glm))
table(round(predict(swiss.glm,type="response")),Catholic.b)
# load the necessary library for further processing...
EnsurePackage("BaylorEdPsych")
PseudoR2(swiss.glm) # generate pseudo‐R‐squared values
#confusion matrix
table(round(predict(swiss.glm,type="response")),Catholic.b)
dim(swiss)
(29+14)/47
# load the necessary library for further processing...
EnsurePackage("BaylorEdPsych")
PseudoR2(swiss.glm) # generate pseudo‐R‐squared values
#confusion matrix
table(round(predict(swiss.glm,type="response")),Catholic.b)
# (29+14)/47
options(scipen=999)  # turn-off scientific notation like 1e+48
# load the necessary library for further processing...
EnsurePackage("car") # Regression helper package: Chile data
EnsurePackage("MCMCpack") # Download MCMCpack package
EnsurePackage("dlookr") # outlier analysis
EnsurePackage("mice") # missing data
EnsurePackage("visdat") # missing data
cat("All Packages are available")
#import Chile dataset
data(Chile)
#structure of Chile dataset
str(Chile)
# Summary of Chile dataset
summary(Chile)
#outlier analysis
diagnose_outlier(Chile)
plot_outlier(Chile)
#data distribution
Chile %>%
pivot_longer(cols=-c(region,sex,vote,education), names_to="variable", values_to="value", values_drop_na = TRUE) %>%
ggplot(aes(x=variable, y=value)) + geom_violin() + facet_wrap( ~ variable, scales="free")
# missing data
md.pattern(Chile, plot=FALSE)
# missing data visualization
vis_miss(Chile)
options(scipen=999)  # turn-off scientific notation like 1e+48
ChileY <- Chile[Chile$vote == "Y",] # Grab the Yes votes
ChileN <- Chile[Chile$vote == "N",] # Grab the No votes
ChileYN <- rbind(ChileY,ChileN) # Make a new dataset with those
ChileYN <- ChileYN[complete.cases(ChileYN),] # Get rid of missing
ChileYN$vote <- factor(ChileYN$vote,levels=c("N","Y")) # Fix the factor
str(ChileYN)
# remove income column
ChileYN <- ChileYN[,!grepl("income",colnames(ChileYN))]
ChileYN$vote <- as.numeric(ChileYN$vote) - 1 # Adjust the outcome
#table(ChileYN$vote)
str(ChileYN)
summary(ChileYN$statusquo)
summary(ChileYN)
# missing data
md.pattern(ChileYN, plot=FALSE)
# Crete glm model
chile.glm <- glm(vote ~ age + statusquo,data=ChileYN,family = binomial(link = "logit"))
summary(chile.glm)
#Chi-Square analysis on logistic regression
anova(chile.glm, test="Chisq")
# Convert the log odds for the coefficient on the predictor into regular odds
exp(coef(chile.glm))
set.seed(271) # Control randomization
bayesLogitOut <- MCMClogit(formula = vote ~ age + statusquo, data = ChileYN)
summary(bayesLogitOut) # Summarize the results
plot(bayesLogitOut)
EnsurePackage("MASS") # AIC
stepOut <- stepAIC(chile.glm)
stepOut$anova
# bayesLogitOut
quoLogOdds <- as.matrix(bayesLogitOut[,"statusquo"])
quoLogOdds <- exp(quoLogOdds)
hist(quoLogOdds, main=NULL)
abline(v=quantile(quoLogOdds,c(0.025)),col="orange")
abline(v=quantile(quoLogOdds,c(0.975)),col="blue")
abline(v=quantile(quoLogOdds,c(0.50)),col="green")
# Corellation between Agriculture and Fertility
plot(Agriculture, Fertility
,main="Corellation between Agriculture and Fertility"
,col="red")
# load the necessary library for further processing...
EnsurePackage("BaylorEdPsych")
PseudoR2(swiss.glm) # generate pseudo‐R‐squared values
#cat("confusion matrix:\n")
#confusion matrix
table(round(predict(swiss.glm,type="response")),Catholic.b)
# (29+14)/47
# load the necessary library for further processing...
EnsurePackage("BaylorEdPsych")
PseudoR2(swiss.glm) # generate pseudo‐R‐squared values
#cat("confusion matrix:",\n)
#confusion matrix
table(round(predict(swiss.glm,type="response")),Catholic.b)
# (29+14)/47
# load the necessary library for further processing...
EnsurePackage("BaylorEdPsych")
PseudoR2(swiss.glm) # generate pseudo‐R‐squared values
cat("confusion matrix:",\n)
# load the necessary library for further processing...
EnsurePackage("BaylorEdPsych")
PseudoR2(swiss.glm) # generate pseudo‐R‐squared values
cat("confusion matrix:\n")
#confusion matrix
table(round(predict(swiss.glm,type="response")),Catholic.b)
# (29+14)/47
# load the necessary library for further processing...
EnsurePackage("BaylorEdPsych")
PseudoR2(swiss.glm) # generate pseudo‐R‐squared values
cat("\nconfusion matrix:\n")
#confusion matrix
table(round(predict(swiss.glm,type="response")),Catholic.b)
# (29+14)/47
options(scipen=999)  # turn-off scientific notation like 1e+48
# load the necessary library for further processing...
EnsurePackage("car") # Regression helper package: Chile data
EnsurePackage("MCMCpack") # Download MCMCpack package
EnsurePackage("dlookr") # outlier analysis
EnsurePackage("mice") # missing data
EnsurePackage("visdat") # missing data
cat("All Packages are available")
#import Chile dataset
data(Chile)
#structure of Chile dataset
str(Chile)
# Summary of Chile dataset
summary(Chile)
#outlier analysis
diagnose_outlier(Chile)
plot_outlier(Chile)
#data distribution
Chile %>%
pivot_longer(cols=-c(region,sex,vote,education), names_to="variable", values_to="value", values_drop_na = TRUE) %>%
ggplot(aes(x=variable, y=value)) + geom_violin() + facet_wrap( ~ variable, scales="free")
# missing data
md.pattern(Chile, plot=FALSE)
# missing data visualization
vis_miss(Chile)
plot(ChileYN$age, ChileYN$statusquo
,main="Corellation between Age  and statusquo"
,col="red")
#confusion matrix
table(round(predict(chile.glm,type="response")),ChileYN$vote)
exp(1)
exp(0)
exp(2)
exp(-1)
# First, define this custom logistic function by running these three lines of code:
logistic <- function(logistX)
{
exp(logistX)/(exp(logistX)+1)
}
logistic(3)
# 0.9525741
logistic(6)
set.seed(123)
logistX <- rnorm(n=100,mean=0,sd=1)
logistY <- exp(logistX)/exp(logistX)+1
binomY <- round(logistY)
logistX <- logistX/1.41 +rnorm(n=100,mean=0,sd=1)/1.41
binomY <- factor(round(logistY),labels(c('Truth','Lie')))
logistDF <- data.frame(logistX,logistY,binomY)
boxplot(formula=logistX ~ binomY, data=logistDF,ylab="GSR",main=NULL)
set.seed(1234)
logistX <- rnorm(n=1000,mean=0,sd=1)
binomY <- round(exp(logistX)/(exp(logistX)+1))
logistX <- logistX/1.41 + rnorm(n=1000,mean=0,sd=1)/1.41
glmOut <- glm(binomY ~ logistX, family=binomial())
summary(glmOut)
anova(glmOut, test="Chisq")
set.seed(1234)
logistX <- rnorm(n=1000,mean=0,sd=1)
binomY <- round(exp(logistX)/(exp(logistX)+1))
logistX <- logistX/1.41 + rnorm(n=1000,mean=0,sd=1)/1.41
glmOut <- glm(binomY ~ logistX, family=binomial())
summary(glmOut)
anova(glmOut, test="Chisq")
exp(coef(glmOut))
install.packages("car") # Regression helper package: Chile data
install.packages("MCMCpack")    # Download MCMCpack package
library(car)
data(Chile)
ChileY <- Chile[Chile$vote == "Y",] # Grab the Yes votes
ChileN <- Chile[Chile$vote == "N",] # Grab the No votes
ChileYN <- rbind(ChileY,ChileN) # Make a new dataset with those
ChileYN <- ChileYN[complete.cases(ChileYN),] # Get rid of missing
ChileYN$vote <- factor(ChileYN$vote,levels=c("N","Y")) # Fix the factor
ChileYN$age10 <- ChileYN$age/10
library(MCMCpack) # Load the package
ChileYN$vote <- as.numeric(ChileYN$vote) - 1 # Adjust the outcome
set.seed(271) # Control randomization
bayesLogitOut <- MCMClogit(formula = vote ~ age10 + income, data = ChileYN)
summary(bayesLogitOut) # Summarize the results
ageLogOdds <- as.matrix(bayesLogitOut[,"age10"])
ageOdds <- apply(ageLogOdds,1,exp) # Transform with exp()
mean(ageOdds) # The point estimate for age/10 in plain odds
quantile(ageOdds,c(0.025)) # Lower bound of HDI
quantile(ageOdds,c(0.975)) # Upper bound of HDI
install.packages("MCMCpack")
ChileYN$age10 <- ChileYN$age/10
glmOut <- glm(binomY ~ logistX, family=binomial())
summary(glmOut)
chout <- glm(formula = vote ~ ChileYN$age10+income,family = binomial(),data=ChileYN)
summary(chout)
# EnsurePackage("MASS") # AIC
stepOut <- stepAIC(chout)
stepOut$anova
stepOutOLD <- stepAIC(chout)
stepOutOLD$anova
summary(chile.glm)
options(scipen=999)  # turn-off scientific notation like 1e+48
ChileY <- Chile[Chile$vote == "Y",] # Grab the Yes votes
ChileN <- Chile[Chile$vote == "N",] # Grab the No votes
ChileYN <- rbind(ChileY,ChileN) # Make a new dataset with those
ChileYN <- ChileYN[complete.cases(ChileYN),] # Get rid of missing
ChileYN$vote <- factor(ChileYN$vote,levels=c("N","Y")) # Fix the factor
# Corellation between Agriculture and Fertility
plot(ChileYN$age, ChileYN$statusquo
,main="Corellation between Age  and statusquo"
,col="red")
str(ChileYN)
# remove income column
ChileYN <- ChileYN[,!grepl("income",colnames(ChileYN))]
ChileYN$vote <- as.numeric(ChileYN$vote) - 1 # Adjust the outcome
#table(ChileYN$vote)
str(ChileYN)
summary(ChileYN$statusquo)
summary(ChileYN)
# missing data
md.pattern(ChileYN, plot=FALSE)
# Crete glm model
chile.glm <- glm(vote ~ age + statusquo,data=ChileYN,family = binomial(link = "logit"))
summary(chile.glm)
hist(residuals(chile.glm))
#Chi-Square analysis on logistic regression
anova(chile.glm, test="Chisq")
# Convert the log odds for the coefficient on the predictor into regular odds
exp(coef(chile.glm))
#confusion matrix
table(round(predict(chile.glm,type="response")),ChileYN$vote)
set.seed(271) # Control randomization
#bayesian estimation of logistic regression
bayesLogitOut <- MCMClogit(formula = vote ~ age + statusquo, data = ChileYN)
summary(bayesLogitOut) # Summarize the results
plot(bayesLogitOut)
summary(chile.glm)
# Convert the log odds for the coefficient on the predictor into regular odds
exp(coef(chile.glm))
#Chi-Square analysis on logistic regression
anova(chile.glm, test="Chisq")
plot(bayesLogitOut)
summary(bayesLogitOut) # Summarize the results
options(scipen=999)  # turn-off scientific notation like 1e+48
ChileY <- Chile[Chile$vote == "Y",] # Grab the Yes votes
ChileN <- Chile[Chile$vote == "N",] # Grab the No votes
ChileYN <- rbind(ChileY,ChileN) # Make a new dataset with those
ChileYN <- ChileYN[complete.cases(ChileYN),] # Get rid of missing
ChileYN$vote <- factor(ChileYN$vote,levels=c("N","Y")) # Fix the factor
# Corellation between Agriculture and Fertility
plot(ChileYN$age, ChileYN$statusquo
,main="Corellation between Age  and statusquo"
,col="red")
str(ChileYN)
# remove income column
ChileYN <- ChileYN[,!grepl("income",colnames(ChileYN))]
ChileYN$vote <- as.numeric(ChileYN$vote) - 1 # Adjust the outcome
#table(ChileYN$vote)
str(ChileYN)
summary(ChileYN$statusquo)
summary(ChileYN)
# missing data
md.pattern(ChileYN, plot=FALSE)
# Crete glm model
chile.glm <- glm(vote ~ age + statusquo,data=ChileYN,family = binomial(link = "logit"))
summary(chile.glm)
#histogram on residuals chile.glm
hist(residuals(chile.glm))
#Chi-Square analysis on logistic regression
anova(chile.glm, test="Chisq")
# Convert the log odds for the coefficient on the predictor into regular odds
exp(coef(chile.glm))
#confusion matrix
table(round(predict(chile.glm,type="response")),ChileYN$vote)
set.seed(271) # Control randomization
#bayesian estimation of logistic regression
bayesLogitOut <- MCMClogit(formula = vote ~ age + statusquo, data = ChileYN)
summary(bayesLogitOut) # Summarize the results
plot(bayesLogitOut)
histquoLogOdds <- function(prdictor)
{
quoLogOdds <- as.matrix(bayesLogitOut[,prdictor])
quoLogOdds <- exp(quoLogOdds)
hist(quoLogOdds, main=NULL)
abline(v=quantile(quoLogOdds,c(0.025)),col="orange")
abline(v=quantile(quoLogOdds,c(0.975)),col="blue")
abline(v=quantile(quoLogOdds,c(0.50)),col="green")
}
histquoLogOdds("statusquo")
histquoLogOdds <- function(prdictor)
{
quoLogOdds <- as.matrix(bayesLogitOut[,prdictor])
quoLogOdds <- exp(quoLogOdds)
hist(quoLogOdds, main=NULL)
abline(v=quantile(quoLogOdds,c(0.025)),col="orange")
abline(v=quantile(quoLogOdds,c(0.975)),col="blue")
abline(v=quantile(quoLogOdds,c(0.50)),col="green")
}
histquoLogOdds("statusquo")
histquoLogOdds("age")
histquoLogOdds <- function(prdictor)
{
quoLogOdds <- as.matrix(bayesLogitOut[,prdictor])
quoLogOdds <- exp(quoLogOdds)
hist(quoLogOdds, main=prdictor)
abline(v=quantile(quoLogOdds,c(0.025)),col="orange")
abline(v=quantile(quoLogOdds,c(0.975)),col="blue")
abline(v=quantile(quoLogOdds,c(0.50)),col="green")
}
histquoLogOdds("statusquo")
histquoLogOdds("age")
# bayesLogitOut hist
# Custom function to output histograms with HDI vertical lines
# prdictor bayesLogitOut - output variable coeffients converted to regular odds (instead of log-odds)
histquoLogOdds <- function(prdictor)
{
quoLogOdds <- as.matrix(bayesLogitOut[,prdictor])
quoLogOdds <- exp(quoLogOdds)  # regular odds (instead of log‐odds)
hist(quoLogOdds, main=prdictor,color="orange") # hist
abline(v=quantile(quoLogOdds,c(0.025)),col="orange")
abline(v=quantile(quoLogOdds,c(0.975)),col="blue")
abline(v=quantile(quoLogOdds,c(0.50)),col="green")
}
histquoLogOdds("statusquo")
histquoLogOdds("age")
# bayesLogitOut hist
# Custom function to output histograms with HDI vertical lines
# prdictor bayesLogitOut - output variable coeffients converted to regular odds (instead of log-odds)
histquoLogOdds <- function(prdictor)
{
quoLogOdds <- as.matrix(bayesLogitOut[,prdictor])
quoLogOdds <- exp(quoLogOdds)  # regular odds (instead of log‐odds)
hist(quoLogOdds, main=prdictor,col="orange") # hist
abline(v=quantile(quoLogOdds,c(0.025)),col="orange")
abline(v=quantile(quoLogOdds,c(0.975)),col="blue")
abline(v=quantile(quoLogOdds,c(0.50)),col="green")
}
histquoLogOdds("statusquo")
histquoLogOdds("age")
# bayesLogitOut hist
# Custom function to output histograms with HDI vertical lines
# prdictor bayesLogitOut - output variable coeffients converted to regular odds (instead of log-odds)
histquoLogOdds <- function(prdictor)
{
quoLogOdds <- as.matrix(bayesLogitOut[,prdictor])
quoLogOdds <- exp(quoLogOdds)  # regular odds (instead of log‐odds)
hist(quoLogOdds, main=prdictor,grey="orange") # hist
abline(v=quantile(quoLogOdds,c(0.025)),col="orange")
abline(v=quantile(quoLogOdds,c(0.975)),col="blue")
abline(v=quantile(quoLogOdds,c(0.50)),col="green")
}
histquoLogOdds("statusquo")
histquoLogOdds("age")
# bayesLogitOut hist
# Custom function to output histograms with HDI vertical lines
# prdictor bayesLogitOut - output variable coeffients converted to regular odds (instead of log-odds)
histquoLogOdds <- function(prdictor)
{
quoLogOdds <- as.matrix(bayesLogitOut[,prdictor])
quoLogOdds <- exp(quoLogOdds)  # regular odds (instead of log‐odds)
hist(quoLogOdds, main=prdictor,col="grey") # hist
abline(v=quantile(quoLogOdds,c(0.025)),col="orange")
abline(v=quantile(quoLogOdds,c(0.975)),col="blue")
abline(v=quantile(quoLogOdds,c(0.50)),col="green")
}
histquoLogOdds("statusquo")
histquoLogOdds("age")
#confusion matrix
table(round(predict(swiss.glm,type="response")),swiss$Catholic.b)
chout <- glm(formula = vote ~ age+income,family = binomial(),data=ChileYN)
chout <- glm(formula = vote ~ age+income,family = binomial(),data=Chile)
summary(chout)
stepOutOLD <- stepAIC(chout)
chout <- glm(formula = vote ~ ChileYN$age10+income,family = binomial(),data=ChileYN)
chwBal <- ChickWeight # Copy the dataset
chwBal$TimeFact <- as.factor(chwBal$Time) #  Time to a factor
list <- rowSums(table(chwBal$Chick,chwBal$TimeFact))==12
list <- list[list==TRUE] # Keep only those with 12 observations
list <- as.numeric(names(list)) # Extract the row indices
chwBal <- chwBal[chwBal$Chick %in% list,] # Match against the data
# Run ezANOVA
install.packages("ez")
library("ez")
ezANOVA(data=chwBal, dv=.(weight), within=.(TimeFact), wid=.(Chick), detailed=TRUE)
chwBal
ezANOVA(data=chwBal, dv=.(weight), within=.(TimeFact), wid=.(Chick), detailed=TRUE)
?beaver1
cor(beaver1$temp[1:100],beaver2$temp)
ts.plot(beaver1$temp[1:100])
ts.plot(beaver2$temp)
db1 <- diff(beaver1$temp[1:100])
db2 <- diff(beaver2$temp)
ts.plot(db1)
ts.plot(db2)
cor(db1, db2)
cor(beaver1$temp[1:100],beaver2$temp)
cor(db1, db2)
ts.plot(beaver1$temp[1:100])
ts.plot(beaver2$temp)
ts.plot(db1)
beaver1$temp[1:100]
len(beaver1$temp[1:100])
count(beaver1$temp[1:100])
beaver1$temp[1:100]
cor(db1, db2)
cor(db1, db2)
?beaver1
install.packages("changepoint")
library(changepoint)
dEUstocks <- diff(EuStockMarkets)
dSMI <- dEUstocks[,2]
dSMIcp <- cpt.var(dSMI)
plot(dSMIcp,cpt.col="grey",cpt.width=5)
dSMIcp
library(changepoint)
dEUstocks <- diff(EuStockMarkets)
dSMI <- dEUstocks[,2]
dSMIcp <- cpt.mean(dSMI)
plot(dSMIcp,cpt.col="grey",cpt.width=5)
dSMIcp
