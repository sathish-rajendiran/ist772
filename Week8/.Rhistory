swiss.lmVIF <- lm(Fertility ~ Infant.Mortality+ Education + Catholic + Agriculture.,data=swiss)
swiss.lmVIF <- lm(Fertility ~ Infant.Mortality+ Education + Catholic + Agriculture,data=swiss)
summary(swiss.lmVIF)
swiss.lmVIF <- lm(Fertility ~ Infant.Mortality + Catholic + Agriculture,data=swiss)
summary(swiss.lmVIF)
summary(swiss)
dim(swiss)
View(swiss)
cor(swiss)
diagnose_outlier(swiss)
cor(swiss)
plot_outlier(swiss)
cor(swiss)
cor(swiss)
Fertility <- swiss$Fertility
Education <- swiss$Education
plot(Education, Fertility, main=NULL)
plot(Education, Fertility
,main="Distribution of differences in 2nd Row"
,xlab="differences"
,col="#4DAFD4")
plot(Education, Fertility
,main="Distribution of differences in 2nd Row"
,xlab="differences"
,col="#CBB43D")
plot(Education, Fertility
,main="Distribution of differences in 2nd Row"
,xlab="differences"
,col="#blue")
plot(Education, Fertility
,main="Distribution of differences in 2nd Row"
,xlab="differences"
,col="orange")
plot(Education, Fertility
,main="Corellation between Education and Fertility"
# ,xlab="differences"
,col="orange")
plot(Education, Fertility
,main="Corellation between Education and Fertility"
,col="orange")
plot(Education, Fertility
,main="Corellation between Education and Fertility"
,col="red")
cor(swiss)
?swiss
# Swiss Fertility and Socioeconomic Indicators (1888) Data
# Standardized fertility measure and socio-economic indicators for each of 47 French-speaking provinces of Switzerland at about 1888.
# A data frame with 47 observations on 6 variables, each of which is in percent, i.e., in [0, 100].
#
# [,1]	Fertility	Ig, ‘common standardized fertility measure’
# [,2]	Agriculture	% of males involved in agriculture as occupation
# [,3]	Examination	% draftees receiving highest mark on army examination
# [,4]	Education	% education beyond primary school for draftees.
# [,5]	Catholic	% ‘catholic’ (as opposed to ‘protestant’).
# [,6]	Infant.Mortality	live births who live less than 1 year.
# All variables but ‘Fertility’ give proportions of the population.
summary(swiss)
# dim(swiss)
# View(swiss)
Fertility <- swiss$Fertility
Education <- swiss$Education
cor(swiss)
#Correlation plot
plot(Education, Fertility
,main="Corellation between Education and Fertility"
,col="red")
?swiss
# Swiss Fertility and Socioeconomic Indicators (1888) Data
# Standardized fertility measure and socio-economic indicators for each of 47 French-speaking provinces of Switzerland at about 1888.
# A data frame with 47 observations on 6 variables, each of which is in percent, i.e., in [0, 100].
#
# [,1]	Fertility	Ig, ‘common standardized fertility measure’
# [,2]	Agriculture	% of males involved in agriculture as occupation
# [,3]	Examination	% draftees receiving highest mark on army examination
# [,4]	Education	% education beyond primary school for draftees.
# [,5]	Catholic	% ‘catholic’ (as opposed to ‘protestant’).
# [,6]	Infant.Mortality	live births who live less than 1 year.
# All variables but ‘Fertility’ give proportions of the population.
summary(swiss)
# dim(swiss)
# View(swiss)
Fertility <- swiss$Fertility
Education <- swiss$Education
cor(swiss)
#Correlation plot
plot(Education, Fertility
,main="Corellation between Education and Fertility"
,col="red")
?swiss
# Swiss Fertility and Socioeconomic Indicators (1888) Data
# Standardized fertility measure and socio-economic indicators for each of 47 French-speaking provinces of Switzerland at about 1888.
# A data frame with 47 observations on 6 variables, each of which is in percent, i.e., in [0, 100].
#
# [,1]	Fertility	Ig, ‘common standardized fertility measure’
# [,2]	Agriculture	% of males involved in agriculture as occupation
# [,3]	Examination	% draftees receiving highest mark on army examination
# [,4]	Education	% education beyond primary school for draftees.
# [,5]	Catholic	% ‘catholic’ (as opposed to ‘protestant’).
# [,6]	Infant.Mortality	live births who live less than 1 year.
# All variables but ‘Fertility’ give proportions of the population.
# summary(swiss)
# dim(swiss)
# View(swiss)
Fertility <- swiss$Fertility
Education <- swiss$Education
cor(swiss)
#Correlation plot
plot(Education, Fertility
,main="Corellation between Education and Fertility"
,col="red")
cor(swiss)
#Correlation plot
plot(Education, Fertility
,main="Corellation between Education and Fertility"
,col="red")
cor(swiss)
# dim(swiss)
# View(swiss)
# define variables
Fertility <- swiss$Fertility
Education <- swiss$Education
Examination <- swiss$Examination
Catholic <- swiss$Catholic
cor(swiss)
Infant <- swiss$Infant
Agriculture <- swiss$Agriculture
cor(swiss)
#Correlation plot
plot(Education, Fertility
,main="Corellation between Education and Fertility"
,col="red")
plot(Examination, Fertility
,main="Corellation between Examination and Fertility"
,col="red")
plot(Catholic, Fertility
,main="Corellation between Catholic and Fertility"
,col="red")
plot(Infant, Fertility
,main="Corellation between Infant and Fertility"
,col="red")
plot(Agriculture, Fertility
,main="Corellation between Agriculture and Fertility"
,col="red")
plot_outlier(swiss)
plot(Education, Fertility
,main="Corellation between Education and Fertility"
,col="red")
arrow(min(Education),Fertility[which.min(Education)],min(Education),min(Education)*56)
plot(Education, Fertility
,main="Corellation between Education and Fertility"
,col="red")
arrows(min(Education),Fertility[which.min(Education)],min(Education),min(Education)*56)
plot(Examination, Fertility
,main="Corellation between Examination and Fertility"
,col="red")
arrows(min(Examination),Fertility[which.min(Examination)],min(Examination),min(Examination)*56)
plot(Catholic, Fertility
,main="Corellation between Catholic and Fertility"
,col="red")
arrows(min(Catholic),Fertility[which.min(Catholic)],min(Catholic),min(Catholic)*56)
# Correlation plot
# Corellation between Education and Fertility
plot(Education, Fertility
,main="Corellation between Education and Fertility"
,col="red")
# arrows(min(Education),Fertility[which.min(Education)],min(Education),min(Education)*56)
# Corellation between Examination and Fertility
plot(Examination, Fertility
,main="Corellation between Examination and Fertility"
,col="red")
# Corellation between Catholic and Fertility
plot(Catholic, Fertility
,main="Corellation between Catholic and Fertility"
,col="red")
# Corellation between Infant and Fertility
plot(Infant, Fertility
,main="Corellation between Infant and Fertility"
,col="red")
# Corellation between Agriculture and Fertility
plot(Agriculture, Fertility
,main="Corellation between Agriculture and Fertility"
,col="red")
dim(swiss)
Fertility
# Predict manually the "feritility value from above variables "
NewFertility = 84.08005 + (-0.96276 * Education) + (-0.06648 * Agriculture)
NewFertility <- 84.08005 + (-0.96276 * 8) + (-0.06648 * 35)
NewFertility
summary(swissOutBF)
swissOutBF
swissOutBF <- lmBF(Fertility ~ Education + Agriculture, data = swiss)
summary(swissOutBF)
swissOutBF
summary(swissOutMCMC)
mean(rsqList)
options(scipen=999)  # turn-off scientific notation like 1e+48
# install.packages("BayesFactor")
library("BayesFactor")
swissOutMCMC <- lmBF(Fertility ~ Education + Agriculture, data = swiss, posterior=TRUE, iterations=10000)
summary(swissOutMCMC)
rsqList <- 1 - (swissOutMCMC[,"sig2"] / var(swiss$Fertility))
mean(rsqList)
quantile(rsqList,c(0.025))
quantile(rsqList,c(0.975))
options(scipen=999)  # turn-off scientific notation like 1e+48
# install.packages("BayesFactor")
library("BayesFactor")
swissOutMCMC <- lmBF(Fertility ~ Education + Agriculture, data = swiss, posterior=TRUE, iterations=10000)
summary(swissOutMCMC)
rsqList <- 1 - (swissOutMCMC[,"sig2"] / var(swiss$Fertility))
MeanrsqList <- mean(rsqList)
MeanrsqList
quantile(rsqList,c(0.025))
quantile(rsqList,c(0.975))
hist(swissOutMCMC[,"Agriculture"])
hist(swissOutMCMC[,"Education"])
hist(swissOutMCMC[,"Agriculture"],col="#CBB43D")
hist(swissOutMCMC[,"Education"],col="#4DAFD4")
hist(swissOutMCMC[,"Education"],col="#4DAFD4")
abline(v=quantile(swissOutMCMC[,"Education"],c(0.025)),col="blue")
abline(v=quantile(swissOutMCMC[,"Education"],c(0.975)),col="green")
hist(swissOutMCMC[,"Agriculture"],col="#CBB43D")
abline(v=quantile(swissOutMCMC[,"Agriculture"],c(0.025)),col="blue")
abline(v=quantile(swissOutMCMC[,"Agriculture"],c(0.975)),col="green")
# Run multiple linear regression with all variables
options(scipen=999)  # turn-off scientific notation like 1e+48
swiss.lmAll <- lm(Fertility ~ .,data=swiss)
summary(swiss.lmAll)
vif(swiss.lmAll)
swiss.lmVIF <- lm(Fertility ~ Infant.Mortality + Catholic + Agriculture,data=swiss)
summary(swiss.lmVIF)
summary(swiss.lm)
vif(swiss.lm)
# Run multiple linear regression with all variables
options(scipen=999)  # turn-off scientific notation like 1e+48
swiss.lmAll <- lm(Fertility ~ .,data=swiss)
summary(swiss.lmAll)
vif(swiss.lmAll) # vif() procedure on all variables from swiss.lmAll model
vif(swiss.lmAll) # vif() procedure on all variables from swiss.lmAll model
vif(swiss.lm) # vif() procedure on execise 3 linear regression model
summary(swiss.lm)
vif(swiss.lm) # vif() procedure on execise 3 linear regression model
install.packages("car")
install.packages("car")
options(scipen=999)  # turn-off scientific notation like 1e+48
install.packages(pkgs=c("car"),repos = "http://cran.us.r-project.org")
library(car)
#“companion to applied regression”
?vif() #Variance Inflation Factors
install.packages(pkgs = c("car"), repos = "http://cran.us.r-project.org")
#import csv files into data frames
fpath <- "/Users/sathishrajendiran/Documents/R/IST772/Week9hiringData.csv"
# function readFiles
readFiles <- function(fpath)
{
dftemp <- data.frame(read.csv(fpath),stringsAsFactors=FALSE)
return(dftemp)
}
hiredata <- readFiles(fpath)
View(hiredata)
# View(hiredata)
summary(hiredata)
dim(hiredata)
colnames(hiredata)
dim(hiredata)
# View(hiredata)
summary(hiredata)
table(hiredata$hired)
# View(hiredata)
summary(hiredata)
table(hiredata$recommend)
# View(hiredata)
summary(hiredata)
cor(hiredata[,4:10])
options(scipen=999)  # turn-off scientific notation like 1e+48
install.packages("dlookr")  # note: requires version 3.5.2 or higher
library(dlookr)
diagnose_outlier(hiredata)
plot_outlier(hiredata)
install.packages("dlookr")
summary(hiredata)
glmOut <- glm(formula = hired ~ recommend, family = binomial(link="logit"), data = hiredata)
glmOut
#install.package("DHARMa")
library(DHARMa)
simulationOutput <- simulateResiduals(fittedModel = glmOut, n = 250)
plot(simulationOutput)
testResiduals(simulationOutput)
summary(glmOut)
hiredata$recInv <- 4 - hiredata$recommend
diagnose(hiredata)
install.packages("mice")
library(mice)
md.pattern(hiredata, plot=FALSE)
install.packages("mice")
md.pattern(hiredata, plot=FALSE)
install.packages("visdat")
library(visdat)
vis_miss(hiredata)
# install.packages("visdat")
library(visdat)
vis_miss(hiredata)
exp(1)
exp(0)
exp(2)
exp(-1)
# First, define this custom logistic function by running these three lines of code:
logistic <- function(logistX)
{
exp(logistX)/(exp(logistX)+1)
}
logistic(3)
logistic(-6)
logistic(-2)
logistic(0)
logistic(2)
logistic(6)
logistY <- exp(logistX)/exp(logistX)+1
logistX <- rnorm(n=100,mean=0,sd=1)
logistY <- exp(logistX)/exp(logistX)+1
binomY <- round(logistY)
logistX <- logistX/1.41 +rnorm(n=100,mean=0,sd=1)/1.41
binomY <- factor(round(logistY),labels = c("truth","lie"))
binomY <- factor(round(logistY),labels = c("Truth","Lie"))
binomY <- factor(round(logistY),labels=c("Truth","Lie"))
logistX <- logistX/1.41 +rnorm(n=100,mean=0,sd=1)/1.41
binomY <- factor(round(logistY),labels=c("Truth","Lie"))
binomY <- factor(round(logistY),labels=c('Truth','Lie'))
binomY <- factor(round(logistY),labels(c('Truth','Lie')))
logistDF <- data.frame(logistX,logistY,binomY)
boxplot(formula=logistX ~ binomY, data=logistDF,ylab="GSR",main=NULL)
set.seed(1234)
logistX <- rnorm(n=1000,mean=0,sd=1)
binomY <- round(exp(logistX)/(exp(logistX)+1))
logistX <- logistX/1.41 + rnorm(n=1000,mean=0,sd=1)/1.41
glmOut <- glm(binomY ~ logistX, family=binomial())
summary(glmOut)
anova(glmOut, test="Chisq")
set.seed(1234)
logistX <- rnorm(n=1000,mean=0,sd=1)
binomY <- round(exp(logistX)/(exp(logistX)+1))
logistX <- logistX/1.41 + rnorm(n=1000,mean=0,sd=1)/1.41
glmOut <- glm(binomY ~ logistX, family=binomial())
summary(glmOut)
anova(glmOut, test="Chisq")
exp(coef(glmOut))
bayesLogitOut <- MCMClogit(formula = vote ~ age + income, data=Chile)
x
x =  1.278e-02
x
y = 2.584e-02
y
x
install.packages("car") # Regression helper package: Chile data
install.packages("MCMCpack")    # Download MCMCpack package
install.packages("car")
library(car)
data(Chile)
ChileY <- Chile[Chile$vote == "Y",] # Grab the Yes votes
ChileN <- Chile[Chile$vote == "N",] # Grab the No votes
ChileYN <- rbind(ChileY,ChileN) # Make a new dataset with those
ChileYN <- ChileYN[complete.cases(ChileYN),] # Get rid of missing
ChileYN$vote <- factor(ChileYN$vote,levels=c("N","Y")) # Fix the factor
ChileYN$age10 <- ChileYN$age/10
library(MCMCpack) # Load the package
ChileYN$vote <- as.numeric(ChileYN$vote) - 1 # Adjust the outcome
set.seed(271) # Control randomization
bayesLogitOut <- MCMClogit(formula = vote ~ age10 + income, data = ChileYN)
summary(bayesLogitOut) # Summarize the results
ageLogOdds <- as.matrix(bayesLogitOut[,"age10"])
ageOdds <- apply(ageLogOdds,1,exp) # Transform with exp()
mean(ageOdds) # The point estimate for age/10 in plain odds
quantile(ageOdds,c(0.025)) # Lower bound of HDI
quantile(ageOdds,c(0.975)) # Upper bound of HDI
ChileYN$age10 <- ChileYN$age/10
ChileYN
chout <- glm(formula = vote ~ ChileYN$age10+income,family = binomial(),data=ChileYN)
summary(chout)
#install.packages("BaylorEdPsych")
library(BaylorEdPsych)
hiredata$recInv <- 4 - hiredata$recommend
install.packages("BaylorEdPsych")
library(BaylorEdPsych)
install.packages("BaylorEdPsych")
library(BaylorEdPsych)
#install.packages("tidyverse")
library(tidyverse)
hiredata %>%
pivot_longer(cols=hiredata[,4:10], names_to="variable", values_to="value", values_drop_na = TRUE) %>%
ggplot(aes(x=variable, y=value)) + geom_violin() + facet_wrap( ~ variable, scales="free")
#install.packages("tidyverse")
library(tidyverse)
hiredata %>%
pivot_longer(cols=-rater, names_to="variable", values_to="value", values_drop_na = TRUE) %>%
ggplot(aes(x=variable, y=value)) + geom_violin() + facet_wrap( ~ variable, scales="free")
install.packages("BaylorEdPsych")
library(BaylorEdPsych)
install.packages(pkgs=c("BaylorEdPsych"),repos = "http://cran.us.r-project.org")
library(BaylorEdPsych)
#import csv files into data frames
fpath <- "/Users/sathishrajendiran/Documents/R/IST772/Week9hiringData.csv"
# function readFiles
readFiles <- function(fpath)
{
dftemp <- data.frame(read.csv(fpath),stringsAsFactors=FALSE)
return(dftemp)
}
hiredata <- readFiles(fpath)
# View(hiredata)
summary(hiredata)
dim(hiredata)
# [1] 295  10
table(hiredata$hired)
# 0   1
# 221  74
table(hiredata$recommend)
#  1   2   3
# 85 133  77
colnames(hiredata)
#  [1] "row"       "hired"     "rater"     "recommend" "vision"    "issues"    "trends"    "consult"   "lead"      "collab"
# View(hiredata)
summary(hiredata)
options(scipen=999)  # turn-off scientific notation like 1e+48
# install.packages("dlookr")  # note: requires version 3.5.2 or higher
library(dlookr)
diagnose_outlier(hiredata)
plot_outlier(hiredata)
cor(hiredata[,4:10])
table(hiredata$hired)
exp(coef(glmOut))
hiredata$recInv <- 4 - hiredata$recommend
install.packages(pkgs=c("BaylorEdPsych"),repos = "http://cran.us.r-project.org")
table(hiredata$recommend)
install.packages(pkgs=c("BaylorEdPsych"),repos = "https://CRAN.R-project.org/package=BaylorEdPsych ")
library(BaylorEdPsych)
install.packages(pkgs=c("BaylorEdPsych"),repos = "https://CRAN.R-project.org/package=BaylorEdPsych")
library(BaylorEdPsych)
install.packages(pkgs=c("BaylorEdPsych"),repos = "https://cran.r-project.org/src/contrib/Archive/BaylorEdPsych/")
library(BaylorEdPsych)
glmOut <- glm(formula = hired ~ ., family = binomial(link="logit"), data = hiredata)
glmOut
glmOut <- glm(formula = hired ~ recommend, family = binomial(link="logit"), data = hiredata)
glmOut
exp(coef(glmOut))
exp(coef(glmOut))
install.packages("caret")
library(caret)
predictedhire<-round(predict(glmOut,type="response"))
sum(predictedhire) # number we predict to be hired
sum(hiredata$hired) # number actually hired
confusion<-table(predictedhire, hiredata$hired)
addmargins(confusion)
confusionMatrix(confusion, positive="1")
# install.packages("caret")
library(caret)
predictedhire<-round(predict(glmOut,type="response"))
sum(predictedhire) # number we predict to be hired
sum(hiredata$hired) # number actually hired
confusion<-table(predictedhire, hiredata$hired)
addmargins(confusion)
confusionMatrix(confusion, positive="1")
bayesLogitOut <- MCMClogit(formula = hired ~ recInv, data = hiredata)
install.packages("MCMCpack")    # Download MCMCpack package
install.packages("MCMCpack")
library("MCMCpack")
bayesLogitOut <- MCMClogit(formula = hired ~ recInv, data = hiredata)
summary(bayesLogitOut)
plot(bayesLogitOut)
plot(bayesLogitOut)
recLogOdds <- as.matrix(bayesLogitOut[,"recInv"])
recOdds <- exp(recLogOdds)
hist(recOdds, main=NULL)
hist(recOdds, main=NULL)
abline(v=quantile(recOdds,c(0.025)),col="black")
abline(v=quantile(recOdds,c(0.975)),col="black")
hist(recOdds, main=NULL)
abline(v=quantile(recOdds,c(0.025)),col="black")
abline(v=quantile(recOdds,c(0.975)),col="blue")
hist(recOdds, main=NULL)
abline(v=quantile(recOdds,c(0.025)),col="orange")
abline(v=quantile(recOdds,c(0.975)),col="blue")
hist(recOdds, main=NULL)
abline(v=quantile(recOdds,c(0.025)),col="orange")
abline(v=quantile(recOdds,c(0.975)),col="blue")
abline(v=quantile(recOdds,c(0.50)),col="blue")
hist(recOdds, main=NULL)
abline(v=quantile(recOdds,c(0.025)),col="orange")
abline(v=quantile(recOdds,c(0.975)),col="blue")
abline(v=quantile(recOdds,c(0.50)),col="green")
hist(recOdds, main=NULL)
abline(v=quantile(recOdds,c(0.025)),col="orange")
abline(v=quantile(recOdds,c(0.975)),col="blue")
abline(v=quantile(recOdds,c(0.50)),col="green")
lmOut <- lm(hired ~ vision + issues + trends + consult + lead + collab,data=hiredata)
summary(lmOut)
plot(bayesLogitOut)
bayesLogitOut
plot(bayesLogitOut)
vif(lmOut)
glmOut <- glm(formula = hired ~ recommend + trends, family = binomial(link="logit"), data = hiredata)
lmOut <- lm(hired ~ vision + issues + trends + consult + lead + collab,data=hiredata)
summary(lmOut)
glmOut <- glm(hired ~ vision + issues + trends + consult + lead + collab,data=hiredata,family = binomial(link = "logit"))
summary(glmOut)
vif(glmOut)
lmOut <- lm(recommend~vision + issues + trends + consult + lead + collab,data=hiredata)
summary(lmOut)
vif(lmOut)
glmOut <- glm(formula = hired ~ recommend + trends, family = binomial(link="logit"), data = hiredata)
glmOut <- glm(hired ~ vision + issues + trends + consult + lead + collab,data=hiredata,family = binomial(link = "logit"))
summary(glmOut)
vif(glmOut)
